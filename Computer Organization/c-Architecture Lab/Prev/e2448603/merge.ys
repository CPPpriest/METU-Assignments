# OMER KILINC 2448603
.pos 0x0
init:
    irmovq stack, %rsp
    irmovq array_begin1, %rdi
    irmovq array_end1, %rsi
    irmovq array_begin2, %rdx
    irmovq array_end2, %rcx
    irmovq array_begin3, %r8
    call merge
    halt

#implement your code below (DO NOT CHANGE/REMOVE THIS COMMENT)

merge:
    
    irmovq $0x8,%r10

test1:
	rrmovq %rdi,%r9
	subq %rsi,%r9
	#(begin1 - end1)
	jge test3
	
	rrmovq %rdx,%r9
	subq %rcx,%r9
	#(begin2 - end2)
	jge test2
	
	mrmovq (%rdi),%r12
	mrmovq (%rdx),%r13
	mrmovq (%r8),%r14
	
	# *begin1 - *begin2
	rrmovq %r12,%r9
	subq %r13,%r9
	jl	condition
	
	rmmovq %r13, (%r8)
	addq %r10, %rdx
	addq %r10, %r8
	
	jmp test1
	
condition:
	rmmovq %r12, (%r8)
	addq %r10, %rdi
	addq %r10, %r8
	
	jmp test1

test2:
	rrmovq %rdi,%r9
	subq %rsi,%r9
	#(begin1 - end1)
	jge test3

	mrmovq (%rdi),%r12
	mrmovq (%rdx),%r13
	mrmovq (%r8),%r14
	
	rmmovq %r12, (%r8)
	addq %r10, %rdi
	addq %r10, %r8
	
	jmp test2
	
test3:
	rrmovq %rdx,%r9
	subq %rcx,%r9
	#(begin2 - end2)
	jge term
	
	mrmovq (%rdi),%r12
	mrmovq (%rdx),%r13
	mrmovq (%r8),%r14
	
	rmmovq %r13, (%r8)
	addq %r10, %rdx
	addq %r10, %r8
	
	jmp test3

term:
	ret	

#implement your code above (DO NOT CHANGE/REMOVE THIS COMMENT)

.pos 0x1008
array_begin1:
    .quad 1
    .quad 2
    .quad 3
    .quad 5
    .quad 17
    .quad 18
    .quad 19
    .quad 110
array_end1:
    .quad 0
array_begin2:
    .quad 10
    .quad 11
    .quad 12
    .quad 200
    .quad 201
    .quad 202
    .quad 203
    .quad 204
array_end2:
    .quad 0
.pos 0x1500
array_begin3:
    .quad 0
.pos 0x1F00
stack:
    .quad 0
    
    
